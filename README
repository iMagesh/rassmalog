--
Note: A HTML version of this file is available in the doc/ directory.
++


= Introduction

Rassmalog is a static blog engine based on RSS 2.0, YAML, and Textile. It
features an extensible blog formatting mechanism, automatic tagging and
archiving, and easy configuration.

* It can be easily changed to use _any_ formatting system (see the
  "configuration" section below).

* It is inspired by the
  Rog[http://rog.rubyforge.org] and hobix[http://hobix.com] blog engines.


*Demonstration*

See {the author's blog}[http://www.soe.ucsc.edu/~snk/] for a demonstration.
Notice how Rassmalog also supports non-English languages.

*Etymology*

The name _Rassmalog_ is derived from
{Rasmalai}[http://en.wikipedia.org/wiki/Rasmalai] (a delicious Indian
dessert) and is somewhat of a portmanteau of the words RSS, YAML, and blog.


== Facilites

At the {project portal}[http://rubyforge.org/projects/rassmalog/], you can:

* {download release packages}[http://rubyforge.org/frs/?group_id=2737]

* {report bugs, submit patches and
  requests}[http://rubyforge.org/tracker/?group_id=2737]

* {use discussion forums}[http://rubyforge.org/forum/?group_id=2737]


= Requirements

The following software is required:

* Rake[http://docs.rubyrake.org/]

* RedCloth[http://whytheluckystiff.net/ruby/redcloth/]

* CodeRay[http://coderay.rubychan.de/]

If you have RubyGems[http://rubygems.org/] on your system, then you can
install the above requirements by running the following command:

  gem install rake redcloth coderay


== Bypassing the requirements

If you do not wish to install RedCloth and CodeRay, please see the section
named "using another formatting system" below.


= Installation

Simply extract the release package anywhere you want.


== Organization

When you extract the release package, you would see the following:

doc/:: directory that contains API documentation

config/:: directory that contains all configuration files

config/blog.yaml:: the primary configuration file for your blog

config/html.erb:: template used to generate all HTML files

config/rss.erb:: template used to generate the RSS 2.0 feed

config/entry.erb:: template that transforms an entry into Textile

config/format.rb:: defines how text is transformed into HTML

config/lang/::  directory that contains translations of English text used in
                the core of Rassmalog. These translations do not include
                English text used in the config/*.erb files.

                The reason for this exclusion is that the config/*.erb files
                are already separate from the core of Rassmalog, and thus
                can be easily localized to any language. Whereas, in order
                to localize the core of Rassmalog, you would have no choice
                but to edit the source code -- which eventually becomes a
                maintainance headache.

config/lang/te-in.yaml::  translation file for the Telugu (India) language.
                          You can enable this translation file by setting
                          the value of the "language" parameter in the
                          config/blog.yaml file to "te-in", as follows:

                            language: te-in

entries/::  directory that contains all blog entry files. The file
            name of a blog entry file can be anything (it does not have to
            match the title of the entry). However, the file extension
            of a blog entry file must be either "yaml" or "yml".

            You can organize your blog entry files within subdirectories.
            For example, I like to put all blog entry files related to Ruby
            programming within the entries/code/ruby/ directory.

entries/example.yaml:: an example blog entry file.

input/::  directory that contains resources (such as images, stylesheets,
          and so on) used by your blog. Everything inside this directory is
          automatically copied into the output/ directory when your blog is
          generated.

output/:: directory that contains all generated files.


= Usage

In the location where you extracted the release package, run the following
command to see a list of available tasks:

  rake -T

To generate your blog, run either of the following commands:

  rake
  rake blog

To _forcefully_ regenerate your blog, run the following command:

  rake clobber blog

To upload your blog to your website, run the following command:

  rake publish


== Configuration

Edit the files inside the config/ directory to suit your taste. These files
are described above in the "Organization" section.


=== Using another text formatting system

If you wish to use a different text formatting system, you can do so by
editing the "config/format.rb" file (read the description at the top of that
file before making changes).

*Example*: If you replace the contents of the "config/format.rb" file with
the following code, then the all entries will appear within gray-colored
<pre> elements in the generated HTML files.

  class String
    def to_html
      '<pre style="background-color: gray">' + self + '</pre>'
    end
  end

In this manner, you can use any formatting system you wish.


= Hacking

You can obtain the latest source code from the Darcs repository:

  darcs get http://rassmalog.rubyforge.org/src/rassmalog/
