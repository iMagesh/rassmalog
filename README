= Introduction

Rassmalog is a simple, static blog engine based on RSS 2.0, YAML, and
Textile. It features an extensible blog formatting mechanism, automatic
tagging and archiving, and easy configuration.

Although it uses the Textile formatting system, it can be easily changed to
use any formatting system (see instructions below). It is inspired by the
Rog[http://rog.rubyforge.org] and hobix[http://hobix.com] blog engines.


== Etymology

The name _Rassmalog_ is derived from
{Rasmalai}[http://en.wikipedia.org/wiki/Rasmalai] (a delicious Indian
dessert) and is somewhat of a portmanteau of the words "rss", "yml", and
"blog".


== Resources

At the {project portal}[http://rubyforge.org/projects/rassmalog/], you can:

* {download release packages}[http://rubyforge.org/frs/?group_id=2737]

* {report bugs, submit patches and
  requests}[http://rubyforge.org/tracker/?group_id=2737]

* {use discussion forums}[http://rubyforge.org/forum/?group_id=2737]


= Requirements

The following software is required:

* Rake[http://docs.rubyrake.org/]

* RedCloth[http://whytheluckystiff.net/ruby/redcloth/]

* CodeRay[http://coderay.rubychan.de/]

If you have RubyGems[http://rubygems.org/] on your system, then you can
install the above requirements by running the following command:

  gem install rake redcloth coderay


== Bypassing the requirements

If you do not wish to install RedCloth and CodeRay, please see the section
named "using another formatting system" below.


= Installation

Simply extract the release package anywhere you want.


== Organization

When you extract the release package, you would see the following:

doc/:: API documentation from available files

config/:: directory that contains all configuration files

config/blog.yml:: the primary configuration file for your blog

config/html.erb:: template used to generate all HTML files

config/rss.erb:: template used to generate the RSS 2.0 feed

config/entry.erb:: template that transforms an entry into Textile

config/format.rb:: defines how text is transformed into HTML

entries/:: directory that contains all blog entries

entries/example.yml:: an example blog entry file

input/::  directory that contains resources (such as images, stylesheets,
          and so on) used by your blog

output/:: directory that contains all generated files. All files from the
          input/ directory are copied into this directory when you generate
          your blog.


= Usage

Inside the directory in which you extracted the release package, run the
following command to see a list of available tasks:

  rake -T

To generate your blog, run one of the following commands:

  rake
  rake blog

To publish your blog to your website, run the following command:

  rake publish


== Configuration

Edit the files inside the config/ directory to suit your taste. These files
are described above in the "Organization" section.


=== Using another text formatting system

If you wish to use a different text formatting system, you can do so by
editing the "config/format.rb" file. However, before changing that file, be
sure to read the description at its beginning.

*Example*: If you replace the contents of the "config/format.rb" file with
the following code, then the all entries will appear within gray-colored
<pre> elements in the generated HTML files.

  class String
    def to_html
      '<pre style="background-color: gray">' + self + '</pre>'
    end
  end

In this manner, you can use any formatting system you wish.


= Hacking

You can obtain the latest source code from the Darcs repository:

  darcs get http://rassmalog.rubyforge.org/src/rassmalog/
